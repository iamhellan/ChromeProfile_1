package org.example;

import com.microsoft.playwright.*;
import com.microsoft.playwright.options.*;
import org.junit.jupiter.api.*;

import java.util.List;

public class v2_promo {
    static Playwright playwright;
    static Browser browser;
    static BrowserContext context;
    static Page mainPage;
    static TelegramNotifier tg;

    @BeforeAll
    static void setUpAll() {
        playwright = Playwright.create();
        browser = playwright.chromium().launch(new BrowserType.LaunchOptions()
                .setHeadless(false)
                .setArgs(List.of("--start-maximized")));
        context = browser.newContext(new Browser.NewContextOptions().setViewportSize(null));
        mainPage = context.newPage();

        // --- TelegramNotifier ---
        String botToken = ConfigHelper.get("telegram.bot.token");
        String chatId = ConfigHelper.get("telegram.chat.id");
        tg = new TelegramNotifier(botToken, chatId);
    }

    @AfterAll
    static void tearDownAll() {
        System.out.println("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω ‚úÖ (–±—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞—ë—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º)");
    }

    @Test
    void openBonusesAndScrollPromoBlocks() {
        long startTime = System.currentTimeMillis();
        tg.sendMessage("üöÄ *–¢–µ—Å—Ç v2_promo* —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª (–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∞–∫—Ü–∏–π —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–æ–≤)");

        try {
            System.out.println("–û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–∞–π—Ç 1xbet.kz");
            mainPage.navigate("https://1xbet.kz/");

            System.out.println("–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞–∑–¥–µ–ª '1XBONUS'");
            mainPage.waitForSelector("a[href='bonus/rules']");
            mainPage.click("a[href='bonus/rules']");
            mainPage.waitForTimeout(1500);

            System.out.println("–û—Ç–∫—Ä—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É '–í—Å–µ –±–æ–Ω—É—Å—ã'");
            mainPage.waitForSelector("span.bonuses-navigation-bar__caption:has-text('–í—Å–µ –±–æ–Ω—É—Å—ã')");
            mainPage.click("span.bonuses-navigation-bar__caption:has-text('–í—Å–µ –±–æ–Ω—É—Å—ã')");
            mainPage.waitForTimeout(1000);

            System.out.println("–ñ–¥—ë–º —Å–ø–∏—Å–æ–∫ –±–æ–Ω—É—Å–æ–≤...");
            mainPage.waitForSelector("ul.bonuses-list");
            List<ElementHandle> bonusLinks = mainPage.querySelectorAll("ul.bonuses-list a.bonus-tile");
            if (bonusLinks.isEmpty())
                throw new RuntimeException("–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –±–æ–Ω—É—Å–Ω–æ–π –∞–∫—Ü–∏–∏!");

            System.out.println("–ù–∞–π–¥–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤: " + bonusLinks.size());

            // --- –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–π –∞–∫—Ü–∏–∏ ---
            for (int i = 0; i < bonusLinks.size(); i++) {
                String href = bonusLinks.get(i).getAttribute("href");
                String url = href.startsWith("http") ? href : "https://1xbet.kz" + href;
                System.out.println("=== –û—Ç–∫—Ä—ã–≤–∞–µ–º –∞–∫—Ü–∏—é #" + (i + 1) + ": " + url);

                Page tab = context.newPage();
                tab.navigate(url);
                waitForPageLoaded(tab, url, i + 1);

                // --- –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞ –∞–∫—Ü–∏–∏ ---
                slowScrollInsidePromo(tab, ".bonus-detail, .promo-detail, .bonus-header", 80, 80);

                // --- –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —è–∑—ã–∫ –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º ---
                switchLanguage(tab, "kz");
                waitForPageLoaded(tab, url, i + 1);
                slowScrollInsidePromo(tab, ".bonus-detail, .promo-detail, .bonus-header", 80, 80);

                switchLanguage(tab, "en");
                waitForPageLoaded(tab, url, i + 1);
                slowScrollInsidePromo(tab, ".bonus-detail, .promo-detail, .bonus-header", 80, 80);

                tab.close();
                mainPage.bringToFront();
                mainPage.waitForTimeout(500);
            }

            long duration = (System.currentTimeMillis() - startTime) / 1000;
            System.out.println("–í—Å–µ –∞–∫—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã ‚úÖ");

            tg.sendMessage(
                    "‚úÖ *–¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω:* v2_promo\n" +
                            "‚Ä¢ –í—Å–µ –∞–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã\n" +
                            "‚Ä¢ –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ –±–ª–æ–∫–∞ ‚Äî –≤—ã–ø–æ–ª–Ω–µ–Ω–∞\n" +
                            "‚Ä¢ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤ ‚Äî –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–æ\n\n" +
                            "üïí –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: *" + duration + " —Å–µ–∫.*\n" +
                            "üåê –°–∞–π—Ç: [1xbet.kz/bonus/rules](https://1xbet.kz/bonus/rules)"
            );

        } catch (Exception e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: " + e.getMessage());
            String screenshotPath = ScreenshotHelper.takeScreenshot(mainPage, "v2_promo");
            tg.sendMessage("üö® –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ *v2_promo*:\n" + e.getMessage());
            if (screenshotPath != null) tg.sendPhoto(screenshotPath, "–°–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏");
            throw e;
        }
    }

    // --- –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∏–º–µ–Ω–Ω–æ –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞ –∞–∫—Ü–∏–∏ ---
    private void slowScrollInsidePromo(Page page, String selector, int steps, int pauseMs) {
        try {
            Locator promoBlock = page.locator(selector);
            promoBlock.waitFor(new Locator.WaitForOptions().setTimeout(5000).setState(WaitForSelectorState.VISIBLE));

            System.out.println("–°–∫—Ä–æ–ª–ª–∏–º –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞ –∞–∫—Ü–∏–∏...");
            for (int i = 0; i <= steps; i++) {
                double percent = i * 1.0 / steps;
                page.evaluate("el => el.scrollTo(0, el.scrollHeight * " + percent + ")", promoBlock);
                page.waitForTimeout(pauseMs);
            }
            for (int i = steps; i >= 0; i--) {
                double percent = i * 1.0 / steps;
                page.evaluate("el => el.scrollTo(0, el.scrollHeight * " + percent + ")", promoBlock);
                page.waitForTimeout(pauseMs);
            }
        } catch (Exception e) {
            System.out.println("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—Å–∫—Ä–æ–ª–ª–∏—Ç—å –±–ª–æ–∫ –∞–∫—Ü–∏–∏: " + e.getMessage());
        }
    }

    // --- –ñ–¥—ë–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–∫—Ü–∏–∏ ---
    private void waitForPageLoaded(Page page, String url, int bonusIndex) {
        try {
            page.waitForLoadState(LoadState.DOMCONTENTLOADED, new Page.WaitForLoadStateOptions().setTimeout(10000));
            page.waitForSelector(".bonus-detail, .promo-detail, .bonus-header",
                    new Page.WaitForSelectorOptions().setTimeout(12000).setState(WaitForSelectorState.VISIBLE));
        } catch (PlaywrightException e) {
            System.out.println("‚ö† [Warning] –°—Ç—Ä–∞–Ω–∏—Ü–∞ #" + bonusIndex + " (" + url + ") –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —á–∞—Å—Ç–∏—á–Ω–æ: " + e.getMessage());
        }
        page.waitForTimeout(800);
    }

    // --- –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ (ru / kz / en) ---
    private void switchLanguage(Page page, String lang) {
        System.out.println("–ú–µ–Ω—è–µ–º —è–∑—ã–∫ –Ω–∞: " + lang);
        try {
            page.waitForSelector("button.header-lang__btn", new Page.WaitForSelectorOptions().setTimeout(3000));
            page.click("button.header-lang__btn");

            String langSelector = switch (lang) {
                case "kz" -> "a.header-lang-list-item-link[data-lng='kz']";
                case "en" -> "a.header-lang-list-item-link[data-lng='en']";
                default -> "a.header-lang-list-item-link[data-lng='ru']";
            };

            page.waitForSelector(langSelector, new Page.WaitForSelectorOptions().setTimeout(3000));
            page.click(langSelector);
            page.waitForTimeout(1800);
        } catch (Exception e) {
            System.out.println("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —è–∑—ã–∫ –Ω–∞ " + lang + ": " + e.getMessage());
        }
    }
}
