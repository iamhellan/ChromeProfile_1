package org.example;

import com.microsoft.playwright.*;
import com.microsoft.playwright.options.LoadState;
import org.junit.jupiter.api.*;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class GoogleMessages extends BaseTest {

    @Test
    void extractCodeFromGoogleMessages() {
        try {
            System.out.println("üì® –û—Ç–∫—Ä—ã–≤–∞–µ–º Google Messages —Å —É–∂–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π —Å–µ—Å—Å–∏–µ–π...");
            Page messagesPage = context.newPage();
            messagesPage.navigate("https://messages.google.com/web/conversations");
            messagesPage.waitForLoadState(LoadState.DOMCONTENTLOADED);
            messagesPage.waitForTimeout(3000);

            System.out.println("–ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ —Å–µ—Å—Å–∏—è Google Messages...");
            ensureGoogleMessagesConnected(messagesPage);

            // --- –ï–°–õ–ò –°–ï–°–°–ò–Ø –£–ü–ê–õ–ê –ò –ü–û–Ø–í–ò–õ–ê–°–¨ –ö–ù–û–ü–ö–ê "–û–ë–ù–û–í–ò–¢–¨" ---
            try {
                Locator refreshButton = messagesPage.locator("button:has-text('–û–±–Ω–æ–≤–∏—Ç—å')");
                if (refreshButton.isVisible()) {
                    System.out.println("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è'. –ñ–º—ë–º '–û–±–Ω–æ–≤–∏—Ç—å'...");
                    try {
                        refreshButton.click();
                    } catch (Exception e1) {
                        System.out.println("–ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∫–ª–∏–∫–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ JS...");
                        messagesPage.evaluate("document.querySelector('button.refresh-button')?.click()");
                    }

                    // –ñ–¥—ë–º, –ø–æ–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±–Ω–æ–≤–∏—Ç—Å—è –∏ —á–∞—Ç—ã –∑–∞–≥—Ä—É–∑—è—Ç—Å—è
                    System.out.println("‚åõ –ñ–¥—ë–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–≤ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...");
                    boolean reconnected = false;
                    for (int i = 0; i < 20; i++) {
                        if (messagesPage.locator("mws-conversation-list-item").count() > 0) {
                            reconnected = true;
                            break;
                        }
                        messagesPage.waitForTimeout(1000);
                    }
                    if (reconnected) {
                        System.out.println("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Google Messages –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ '–û–±–Ω–æ–≤–∏—Ç—å'");
                    } else {
                        System.out.println("‚ùå –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è '–û–±–Ω–æ–≤–∏—Ç—å' —á–∞—Ç—ã —Ç–∞–∫ –∏ –Ω–µ –ø–æ—è–≤–∏–ª–∏—Å—å!");
                    }
                }
            } catch (Exception e) {
                System.out.println("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–Ω–æ–ø–∫–∏ '–û–±–Ω–æ–≤–∏—Ç—å': " + e.getMessage());
            }


            // --- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é ---
            if (messagesPage.url().contains("welcome")) {
                throw new RuntimeException("‚ö†Ô∏è –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ Google Messages! –ù—É–∂–Ω–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤—Ä—É—á–Ω—É—é –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR.");
            }

            // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ—Å–ª–µ '–û–±–Ω–æ–≤–∏—Ç—å' —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –µ—â—ë –≥—Ä—É–∑–∏—Ç—Å—è
            if (messagesPage.locator("button:has-text('–û–±–Ω–æ–≤–∏—Ç—å')").isVisible()) {
                System.out.println("üîÅ –ö–Ω–æ–ø–∫–∞ '–û–±–Ω–æ–≤–∏—Ç—å' –≤—Å—ë –µ—â—ë –≤–∏–¥–Ω–∞ ‚Äî –ø—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É...");
                messagesPage.reload();
                messagesPage.waitForTimeout(4000);
                ensureGoogleMessagesConnected(messagesPage);
            }


            // --- –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ (—É—Å—Ç–æ–π—á–∏–≤–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª) ---
            System.out.println("‚åõ –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤...");
            boolean chatsLoaded = false;
            for (int i = 0; i < 20; i++) {
                if (messagesPage.locator("mws-conversation-list-item").count() > 0) {
                    chatsLoaded = true;
                    break;
                }
                messagesPage.waitForTimeout(1000);
            }
            if (!chatsLoaded)
                throw new RuntimeException("‚ùå –ß–∞—Ç—ã –Ω–µ –ø–æ—è–≤–∏–ª–∏—Å—å –≤ Google Messages ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ —É—Å–ø–µ–ª–∏ –ø–æ–¥–≥—Ä—É–∑–∏—Ç—å—Å—è.");
            System.out.println("‚úÖ –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –Ω–∞–π–¥–µ–Ω");

            // --- –ö–ª–∏–∫–∞–µ–º –ø–æ —á–∞—Ç—É 1xBet (–µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –±–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π) ---
            System.out.println("üîç –ò—â–µ–º —á–∞—Ç —Å 1xBet...");
            Locator chat = messagesPage.locator("mws-conversation-list-item:has-text('1xbet'), mws-conversation-list-item:has-text('1xbet-kz')");
            if (chat.count() == 0) {
                System.out.println("‚ö†Ô∏è –ß–∞—Ç 1xBet –Ω–µ –Ω–∞–π–¥–µ–Ω, –∫–ª–∏–∫–∞–µ–º –ø–æ –ø–µ—Ä–≤–æ–º—É –≤ —Å–ø–∏—Å–∫–µ");
                chat = messagesPage.locator("mws-conversation-list-item").first();
            }
            chat.first().click();
            System.out.println("üí¨ –ß–∞—Ç –æ—Ç–∫—Ä—ã—Ç");
            messagesPage.waitForTimeout(3000);

            // --- –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ---
            System.out.println("üì© –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...");
            Locator messageNodes = messagesPage.locator("div.text-msg-content div.text-msg.msg-content div.ng-star-inserted");
            int count = 0;
            for (int i = 0; i < 15; i++) { // –∂–¥—ë–º –¥–æ 15 —Å–µ–∫—É–Ω–¥
                count = messageNodes.count();
                if (count > 0) break;
                messagesPage.waitForTimeout(1000);
            }
            if (count == 0)
                throw new RuntimeException("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤–Ω—É—Ç—Ä–∏ —á–∞—Ç–∞!");
            String lastMessageText = messageNodes.nth(count - 1).innerText().trim();
            System.out.println("üì® –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: " + lastMessageText);

            // --- –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ (–±—É–∫–≤—ã+—Ü–∏—Ñ—Ä—ã 4‚Äì8 —Å–∏–º–≤–æ–ª–æ–≤) ---
            Matcher matcher = Pattern.compile("\\b[a-zA-Z0-9]{4,8}\\b").matcher(lastMessageText);
            String code = matcher.find() ? matcher.group() : null;
            if (code == null)
                throw new RuntimeException("‚ùå –ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏!");
            System.out.println("‚úÖ –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–π –∫–æ–¥: " + code);

            // --- –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–¥ ---
            System.out.println("üß≠ –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–¥...");
            Page newTab = context.newPage();
            newTab.setContent("<html><body style='font-family: sans-serif; font-size: 24px; padding: 20px;'>" +
                    "<h2>–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:</h2>" +
                    "<p style='color: green; font-weight: bold;'>" + code + "</p>" +
                    "</body></html>");
            newTab.waitForTimeout(2000);
            System.out.println("‚úÖ –ö–æ–¥ –≤—Å—Ç–∞–≤–ª–µ–Ω –≤ –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É: " + code);

            // --- Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ---
            try {
                tg.sendMessage("üì¨ –ö–æ–¥ –∏–∑ Google Messages: *" + code + "*");
                System.out.println("üì® –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram ‚úÖ");
            } catch (Exception tgErr) {
                System.out.println("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: " + tgErr.getMessage());
            }

            System.out.println("üéØ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω!");

        } catch (Exception e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
            tg.sendMessage("üö® –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ Google Messages: " + e.getMessage());
        }
    }

    protected static void ensureGoogleMessagesConnected(Page messagesPage) {
        System.out.println("üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ Google Messages...");
        messagesPage.waitForTimeout(2000);

        try {
            Locator refreshButton = messagesPage.locator("button:has-text('–û–±–Ω–æ–≤–∏—Ç—å')");
            if (refreshButton.isVisible()) {
                System.out.println("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è'. –ñ–º—ë–º '–û–±–Ω–æ–≤–∏—Ç—å'...");
                try {
                    refreshButton.click();
                } catch (Exception e1) {
                    System.out.println("–ü–µ—Ä–≤—ã–π –∫–ª–∏–∫ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ JS...");
                    messagesPage.evaluate("document.querySelector('button.refresh-button')?.click()");
                }
                messagesPage.waitForTimeout(4000);
            }

            if (messagesPage.locator("mws-conversation-list-item").count() == 0) {
                System.out.println("‚åõ –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–≤...");
                boolean chatsLoaded = false;
                for (int i = 0; i < 20; i++) {
                    if (messagesPage.locator("mws-conversation-list-item").count() > 0) {
                        chatsLoaded = true;
                        break;
                    }
                    messagesPage.waitForTimeout(1000);
                }
                if (chatsLoaded)
                    System.out.println("‚úÖ –ß–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–≥—Ä—É–∑–∏–ª–∏—Å—å");
                else
                    System.out.println("‚ùå –ß–∞—Ç—ã –Ω–µ –ø–æ—è–≤–∏–ª–∏—Å—å ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –æ—Ç–≤–∞–ª–∏–ª—Å—è.");
            } else {
                System.out.println("‚úÖ Google Messages –≤ –æ–Ω–ª–∞–π–Ω–µ, —á–∞—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã");
            }
        } catch (Exception e) {
            System.out.println("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: " + e.getMessage());
        }
    }


    @AfterAll
    static void tearDownAll() {
        System.out.println("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω ‚úÖ (–±—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞—ë—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º)");
    }
}
