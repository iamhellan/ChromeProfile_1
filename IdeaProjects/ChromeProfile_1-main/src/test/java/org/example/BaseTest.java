package org.example;

import com.microsoft.playwright.*;
import org.junit.jupiter.api.BeforeAll;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;

public abstract class BaseTest {
    protected static Playwright playwright;
    protected static Browser browser;
    protected static BrowserContext context;
    protected static Page page;
    protected static TelegramNotifier tg;

    @BeforeAll
    static void setUpAll() {
        playwright = Playwright.create();

        // --- –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ ---
        String osUser = System.getProperty("user.name").toLowerCase();
        String activeProfile;
        if (osUser.contains("zhntm")) {
            activeProfile = "home";
        } else if (osUser.contains("b.zhantemirov")) {
            activeProfile = "work";
        } else {
            activeProfile = "home";
        }

        // --- –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—É—Ç—å –∏–∑ config.properties ---
        String key = "chrome.profile." + activeProfile;
        String userDataDirPath = ConfigHelper.get(key);
        Path userDataDir = Paths.get(userDataDirPath);

        if (!userDataDir.toFile().exists()) {
            throw new RuntimeException("‚ùå –ü—Ä–æ—Ñ–∏–ª—å Chrome –Ω–µ –Ω–∞–π–¥–µ–Ω: " + userDataDir.toAbsolutePath());
        }

        System.out.println("‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å Chrome: " + activeProfile);
        System.out.println("üìÅ –ü—É—Ç—å: " + userDataDir.toAbsolutePath());

        // --- Persistent Context ---
        browser = playwright.chromium().launch( // ‚Üê –¥–æ–±–∞–≤–ª–µ–Ω –æ–±—ä–µ–∫—Ç browser
                new BrowserType.LaunchOptions()
                        .setHeadless(false)
                        .setArgs(List.of("--start-maximized"))
        );

        context = playwright.chromium().launchPersistentContext(
                userDataDir,
                new BrowserType.LaunchPersistentContextOptions()
                        .setHeadless(false)
                        .setViewportSize(null)
                        .setArgs(List.of(
                                "--start-maximized",
                                "--disable-blink-features=AutomationControlled",
                                "--disable-web-security",
                                "--disable-features=IsolateOrigins,site-per-process",
                                "--disable-infobars",
                                "--disable-notifications",
                                "--no-sandbox",
                                "--disable-gpu",
                                "--disable-dev-shm-usage",
                                "--ignore-certificate-errors",
                                "--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) " +
                                        "AppleWebKit/537.36 (KHTML, like Gecko) " +
                                        "Chrome/122.0.0.0 Safari/537.36"
                        ))
        );

        // --- –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –≤–∫–ª–∞–¥–∫—É ---
        if (context.pages().isEmpty()) {
            page = context.newPage();
        } else {
            page = context.pages().get(0);
        }

        page.setDefaultTimeout(60000);

        // --- Telegram Notifier ---
        String botToken = ConfigHelper.get("telegram.bot.token");
        String chatId = ConfigHelper.get("telegram.chat.id");
        tg = new TelegramNotifier(botToken, chatId);

        System.out.println("üß† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –û–°: " + osUser);
        System.out.println("‚úÖ Persistent Chrome –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!");
    }
    // ---------- –•–ï–õ–ü–ï–†: –ü–†–û–í–ï–†–ö–ê –°–ï–°–°–ò–ò GOOGLE MESSAGES ----------
    protected static void ensureGoogleMessagesConnected(Page messagesPage) {
        try {
            messagesPage.waitForTimeout(2000); // –∂–¥—ë–º –∑–∞–≥—Ä—É–∑–∫—É UI

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å"
            Locator refreshButton = messagesPage.locator("button:has-text('–û–±–Ω–æ–≤–∏—Ç—å')");
            if (refreshButton.isVisible()) {
                System.out.println("‚ö†Ô∏è –ü–æ—Ç–µ—Ä—è–Ω–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Google Messages ‚Äî –∂–º—ë–º '–û–±–Ω–æ–≤–∏—Ç—å'");
                refreshButton.click();
                messagesPage.waitForTimeout(3000);

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å—á–µ–∑–ª–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞
                if (refreshButton.isVisible()) {
                    System.out.println("‚ùå –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è '–û–±–Ω–æ–≤–∏—Ç—å' –∫–Ω–æ–ø–∫–∞ –Ω–µ –∏—Å—á–µ–∑–ª–∞ ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (QR).");
                    tg.sendMessage("‚ö†Ô∏è Google Messages: —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ QR.");
                } else {
                    System.out.println("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Google Messages –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.");
                }
            } else {
                System.out.println("üîπ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Google Messages –∞–∫—Ç–∏–≤–Ω–æ, –≤—Å—ë —Ö–æ—Ä–æ—à–æ.");
            }

        } catch (PlaywrightException e) {
            System.out.println("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è Google Messages: " + e.getMessage());
        }
    }

}
