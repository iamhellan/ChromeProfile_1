package org.example;

import com.microsoft.playwright.*;
import com.microsoft.playwright.options.LoadState;
import com.microsoft.playwright.options.WaitForSelectorState;
import org.junit.jupiter.api.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import static org.example.BaseTest.ensureGoogleMessagesConnected;
import static org.example.v2_MOBI_id_authorization_and_bet.tgStep;

public class v2_MOBI_email_authorization extends BaseTest {

    @Test
    void loginWithEmailAndSms() {
        long startTime = System.currentTimeMillis();
        tg.sendMessage("üöÄ *–¢–µ—Å—Ç v2_MOBI_email_authorization* —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª (–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ Email + SMS)");

        String screenshotPath = null;

        try {
            System.out.println("–û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é —Å–∞–π—Ç–∞ 1xbet.kz");
            page.navigate("https://1xbet.kz/?platform_type=mobile");

            // --- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é ---
            System.out.println("–ü—Ä–æ–±—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –∞–∫–∫–∞—É–Ω—Ç...");
            try {
                Locator profileButton = page.locator("button.user-header__link.header__link.header__reg.header__reg_ico.ion-android-person");
                profileButton.waitFor(new Locator.WaitForOptions().setTimeout(15000).setState(WaitForSelectorState.VISIBLE));
                System.out.println("–ö–Ω–æ–ø–∫–∞ '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç' –Ω–∞–π–¥–µ–Ω–∞ ‚úÖ");

                profileButton.click();
                page.waitForTimeout(2000);

                Locator logoutButton = page.locator("button.drop-menu-list__link_exit");
                if (logoutButton.isVisible()) {
                    System.out.println("üîπ –ê–∫–∫–∞—É–Ω—Ç —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ–º –≤—ã—Ö–æ–¥...");
                    logoutButton.click();
                    page.waitForTimeout(1000);
                    page.click("button.swal2-confirm.swal2-styled");
                    page.waitForTimeout(2000);
                } else {
                    System.out.println("‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—Ö–æ–¥.");
                }
            } catch (Exception e) {
                System.out.println("‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π –≤—Ö–æ–¥–∞.");
            }

            // --- –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è ---
            System.out.println("–ñ–º—ë–º '–í–æ–π—Ç–∏' –≤ —à–∞–ø–∫–µ");
            page.click("button#curLoginForm >> text=–í–æ–π—Ç–∏");

            System.out.println("–í–≤–æ–¥–∏–º Email");
            page.fill("input#auth_id_email", ConfigHelper.get("email"));

            System.out.println("–í–≤–æ–¥–∏–º –ø–∞—Ä–æ–ª—å");
            page.fill("input#auth-form-password", ConfigHelper.get("password"));

            System.out.println("–ñ–º—ë–º –∫–Ω–æ–ø–∫—É '–í–æ–π—Ç–∏'");
            page.click("button.auth-button:has(span.auth-button__text:has-text('–í–æ–π—Ç–∏'))");

            // ---- –ñ–î–Å–ú –†–ï–®–ï–ù–ò–Ø –ö–ê–ü–ß–ò ----
            System.out.println("–¢–µ–ø–µ—Ä—å —Ä–µ—à–∞–π –∫–∞–ø—á—É –≤—Ä—É—á–Ω—É—é ‚Äî –∂–¥—É –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ '–í—ã—Å–ª–∞—Ç—å –∫–æ–¥' (–¥–æ 10 –º–∏–Ω—É—Ç)...");
            page.waitForSelector("button:has-text('–í—ã—Å–ª–∞—Ç—å –∫–æ–¥')",
                    new Page.WaitForSelectorOptions().setTimeout(600_000).setState(WaitForSelectorState.VISIBLE)
            );
            System.out.println("–ö–Ω–æ–ø–∫–∞ '–í—ã—Å–ª–∞—Ç—å –∫–æ–¥' –ø–æ—è–≤–∏–ª–∞—Å—å ‚úÖ");

            System.out.println("–ñ–º—ë–º '–í—ã—Å–ª–∞—Ç—å –∫–æ–¥'");
            page.click("button:has-text('–í—ã—Å–ª–∞—Ç—å –∫–æ–¥')");

            System.out.println("–ñ–¥—ë–º –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–¥–∞...");
            page.waitForSelector("input.phone-sms-modal-code__input",
                    new Page.WaitForSelectorOptions().setTimeout(600_000).setState(WaitForSelectorState.VISIBLE)
            );
            System.out.println("–ü–æ–ª–µ –ø–æ—è–≤–∏–ª–æ—Å—å ‚úÖ");

            // --- Google Messages ---
            System.out.println("üì® –û—Ç–∫—Ä—ã–≤–∞–µ–º Google Messages —Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π —Å–µ—Å—Å–∏–µ–π...");
            Page messagesPage = context.newPage();
            messagesPage.navigate("https://messages.google.com/web/conversations");
            messagesPage.waitForLoadState(LoadState.DOMCONTENTLOADED);
            messagesPage.waitForTimeout(3000);

            ensureGoogleMessagesConnected(messagesPage);

            if (messagesPage.url().contains("welcome")) {
                throw new RuntimeException("‚ö†Ô∏è –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ Google Messages! –ù—É–∂–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR.");
            }

            System.out.println("‚åõ –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤...");
            for (int i = 0; i < 20 && messagesPage.locator("mws-conversation-list-item").count() == 0; i++)
                messagesPage.waitForTimeout(1000);
            System.out.println("‚úÖ –ß–∞—Ç—ã –Ω–∞–π–¥–µ–Ω—ã");

            Locator chat = messagesPage.locator("mws-conversation-list-item:has-text('1xbet'), mws-conversation-list-item:has-text('1xbet-kz')");
            if (chat.count() == 0) chat = messagesPage.locator("mws-conversation-list-item").first();
            chat.first().click();
            messagesPage.waitForTimeout(2000);

            Locator messages = messagesPage.locator("div.text-msg-content div.text-msg.msg-content div.ng-star-inserted");
            int count = messages.count();
            String text = messages.nth(count - 1).innerText().trim();
            System.out.println("üì® –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: " + text);

            Matcher m = Pattern.compile("\\b[a-zA-Z0-9]{4,8}\\b").matcher(text);
            String code = m.find() ? m.group() : null;
            if (code == null) throw new RuntimeException("‚ùå –ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
            System.out.println("‚úÖ –ö–æ–¥: " + code);

            // --- –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ —Å–∞–π—Ç ---
            page.bringToFront();
            page.fill("input.phone-sms-modal-code__input", code);
            page.click("button.phone-sms-modal-content__send:has-text('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')");
            page.waitForTimeout(3000);
            System.out.println("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ‚úÖ");

            tg.sendMessage("üì¨ –ö–æ–¥ –∏–∑ Google Messages: *" + code + "*");

            // --- –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ / –í—ã—Ö–æ–¥ ---
            System.out.println("–ü—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—ã—Ö–æ–¥...");
            try {
                Locator menu = page.locator("button.user-header__link.header__link--messages");
                menu.waitFor(new Locator.WaitForOptions().setTimeout(10000).setState(WaitForSelectorState.VISIBLE));
                menu.click();

                Locator logout = page.locator("button.drop-menu-list__link_exit:has-text('–í—ã—Ö–æ–¥')");
                logout.click();

                page.locator("button.swal2-confirm.swal2-styled:has-text('–û–ö')").click();
                tgStep("–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ", true);
            } catch (Exception e) {
                tgStep("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ: " + e.getMessage(), false);
            }

            long duration = (System.currentTimeMillis() - startTime) / 1000;
            tg.sendMessage("üéØ *–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ*\nüïí –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: *" + duration + " —Å–µ–∫.* ‚úÖ");
            System.out.println("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω ‚úÖ");

        } catch (Exception e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
            screenshotPath = ScreenshotHelper.takeScreenshot(page, "v2_MOBI_email_authorization_error");
            tg.sendMessage("üö® –û—à–∏–±–∫–∞ –≤ *v2_MOBI_email_authorization*:\n" + e.getMessage());
            if (screenshotPath != null && !screenshotPath.isEmpty())
                tg.sendPhoto(screenshotPath, "–°–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏");
        }
    }

    @AfterAll
    static void tearDownAll() {
        System.out.println("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω ‚úÖ (–±—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞—ë—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º)");
    }
}
