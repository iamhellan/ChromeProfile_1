package org.example;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.Properties;

public class TelegramNotifier {
    private final String botToken;
    private final String chatId;
    private String parseMode = "HTML"; // ‚úÖ –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é HTML

    // --- –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ‚Ññ1 (—á–µ—Ä–µ–∑ Properties) ---
    public TelegramNotifier(Properties props) {
        this.botToken = props.getProperty("telegram.bot.token");
        this.chatId = props.getProperty("telegram.chat.id");
    }

    // --- –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ‚Ññ2 (—á–µ—Ä–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç—ã) ---
    public TelegramNotifier(String tgToken, String tgChat) {
        this.botToken = tgToken;
        this.chatId = tgChat;
    }

    // --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑–º–µ—Ç–∫–∏ ---
    public void setParseMode(String mode) {
        this.parseMode = mode;
    }

    // --- –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ---
    public void sendMessage(String message) {
        try {
            // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
            String encodedText = URLEncoder.encode(message, "UTF-8");
            String urlString = String.format(
                    "https://api.telegram.org/bot%s/sendMessage?chat_id=%s&text=%s&parse_mode=%s",
                    botToken, chatId, encodedText, parseMode
            );

            HttpURLConnection conn = (HttpURLConnection) new URL(urlString).openConnection();
            conn.setRequestMethod("GET");
            int responseCode = conn.getResponseCode();

            if (responseCode == 200) {
                System.out.println("üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram");
            } else {
                System.out.println("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: " + responseCode);
                try (InputStream err = conn.getErrorStream()) {
                    if (err != null) {
                        System.out.println("–û—Ç–≤–µ—Ç Telegram: " + new String(err.readAllBytes()));
                    }
                }
            }
            conn.disconnect();

        } catch (Exception e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: " + e.getMessage());
        }
    }

    // --- –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é ---
    public void sendPhoto(String filePath, String caption) {
        String boundary = "----WebKitFormBoundary" + System.currentTimeMillis();

        try {
            URL url = new URL("https://api.telegram.org/bot" + botToken + "/sendPhoto");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setDoOutput(true);
            conn.setRequestMethod("POST");
            conn.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + boundary);

            try (DataOutputStream out = new DataOutputStream(conn.getOutputStream())) {

                // chat_id
                out.writeBytes("--" + boundary + "\r\n");
                out.writeBytes("Content-Disposition: form-data; name=\"chat_id\"\r\n\r\n");
                out.writeBytes(chatId + "\r\n");

                // caption
                if (caption != null && !caption.isEmpty()) {
                    out.writeBytes("--" + boundary + "\r\n");
                    out.writeBytes("Content-Disposition: form-data; name=\"caption\"\r\n\r\n");
                    out.writeBytes(caption + "\r\n");
                }

                // parse_mode
                out.writeBytes("--" + boundary + "\r\n");
                out.writeBytes("Content-Disposition: form-data; name=\"parse_mode\"\r\n\r\n");
                out.writeBytes(parseMode + "\r\n");

                // file
                out.writeBytes("--" + boundary + "\r\n");
                out.writeBytes("Content-Disposition: form-data; name=\"photo\"; filename=\"" + filePath + "\"\r\n");
                out.writeBytes("Content-Type: image/png\r\n\r\n");

                try (FileInputStream fis = new FileInputStream(filePath)) {
                    byte[] buffer = new byte[4096];
                    int bytesRead;
                    while ((bytesRead = fis.read(buffer)) != -1) {
                        out.write(buffer, 0, bytesRead);
                    }
                }

                out.writeBytes("\r\n");
                out.writeBytes("--" + boundary + "--\r\n");
            }

            int responseCode = conn.getResponseCode();
            if (responseCode == 200) {
                System.out.println("üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram");
            } else {
                System.out.println("‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ: " + responseCode);
                try (InputStream err = conn.getErrorStream()) {
                    if (err != null) {
                        System.out.println("–û—Ç–≤–µ—Ç Telegram: " + new String(err.readAllBytes()));
                    }
                }
            }

            conn.disconnect();

        } catch (Exception e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤ Telegram: " + e.getMessage());
        }
    }
}
