package org.example;

import com.microsoft.playwright.*;
import com.microsoft.playwright.options.WaitForSelectorState;
import org.junit.jupiter.api.*;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class v2_MOBI_social_authorization {
    static Playwright playwright;
    static Browser browser;
    static BrowserContext mobiContext;
    static TelegramNotifier tg;

    @BeforeAll
    static void setup() {
        playwright = Playwright.create();

        // --- –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ (home/work) ---
        String osUser = System.getProperty("user.name").toLowerCase();
        String activeProfile;
        if (osUser.contains("zhntm")) {
            activeProfile = "home";
        } else if (osUser.contains("b.zhantemirov")) {
            activeProfile = "work";
        } else {
            activeProfile = "home";
        }

        // --- –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—É—Ç—å –ø—Ä–æ—Ñ–∏–ª—è Chrome ---
        String key = "chrome.profile." + activeProfile;
        String userDataDirPath = ConfigHelper.get(key);
        Path userDataDir = Paths.get(userDataDirPath);
        if (!userDataDir.toFile().exists()) {
            throw new RuntimeException("‚ùå –ü—Ä–æ—Ñ–∏–ª—å Chrome –Ω–µ –Ω–∞–π–¥–µ–Ω: " + userDataDir.toAbsolutePath());
        }

        System.out.println("‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å Chrome: " + activeProfile);
        System.out.println("üìÅ –ü—É—Ç—å: " + userDataDir.toAbsolutePath());

        // --- Persistent Context –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ ---
        mobiContext = playwright.chromium().launchPersistentContext(
                userDataDir,
                new BrowserType.LaunchPersistentContextOptions()
                        .setHeadless(false)
                        .setArgs(List.of(
                                "--start-maximized",
                                "--disable-blink-features=AutomationControlled",
                                "--disable-web-security",
                                "--disable-features=IsolateOrigins,site-per-process",
                                "--disable-infobars",
                                "--no-sandbox",
                                "--disable-gpu",
                                "--disable-dev-shm-usage",
                                "--ignore-certificate-errors",
                                "--user-agent=Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X) " +
                                        "AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0 Mobile/15A372 Safari/604.1"
                        ))
        );

        // Telegram Notifier
        String botToken = ConfigHelper.get("telegram.bot.token");
        String chatId = ConfigHelper.get("telegram.chat.id");
        tg = new TelegramNotifier(botToken, chatId);

        System.out.println("üß† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –û–°: " + osUser);
        System.out.println("‚úÖ Persistent Chrome –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!");
    }

    @AfterAll
    static void teardown() {
        System.out.println("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω ‚úÖ (–±—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞—ë—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º)");
    }

    @Test
    void socialGoogleAuthMobile() {
        long startTime = System.currentTimeMillis();
        tg.sendMessage("üöÄ *–¢–µ—Å—Ç v2_MOBI_social_authorization* —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª (–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Google)");

        String screenshotPath = null;
        try {
            Page page = mobiContext.newPage();

            System.out.println("–û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é —Å–∞–π—Ç–∞...");
            page.navigate("https://1xbet.kz/?platform_type=mobile");

            System.out.println("–ñ–º—ë–º '–í–æ–π—Ç–∏'...");
            page.click("button#curLoginForm");

            System.out.println("–í—ã–±–∏—Ä–∞–µ–º Google...");
            page.click("li.auth-social__item .auth-social__link--google");

            // --- –û–ñ–ò–î–ê–ù–ò–ï –ü–û–ü–ê–ü–ê GOOGLE ---
            System.out.println("–ñ–¥—ë–º –æ–∫–Ω–æ Google...");
            Page popup = page.waitForPopup(() -> {});
            popup.waitForLoadState();

            System.out.println("–í–≤–æ–¥–∏–º email...");
            popup.fill("input[type='email']", ConfigHelper.get("google.email"));
            popup.click("button:has-text('–î–∞–ª–µ–µ')");
            popup.waitForTimeout(2000);

            System.out.println("–í–≤–æ–¥–∏–º –ø–∞—Ä–æ–ª—å...");
            popup.fill("input[type='password']", ConfigHelper.get("google.password"));
            popup.click("button:has-text('–î–∞–ª–µ–µ')");
            popup.waitForClose(() -> {});

            // --- –ñ–ú–Å–ú –í–´–°–õ–ê–¢–¨ –ö–û–î ---
            System.out.println("–ñ–º—ë–º '–í—ã—Å–ª–∞—Ç—å –∫–æ–¥'...");
            Locator sendCodeButton = page.locator("button:has-text('–í—ã—Å–ª–∞—Ç—å –∫–æ–¥')");
            sendCodeButton.waitFor(new Locator.WaitForOptions().setState(WaitForSelectorState.VISIBLE));
            try {
                sendCodeButton.click();
                System.out.println("–ö–Ω–æ–ø–∫–∞ '–í—ã—Å–ª–∞—Ç—å –∫–æ–¥' –Ω–∞–∂–∞—Ç–∞ ‚úÖ");
            } catch (Exception e) {
                System.out.println("–ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∫–ª–∏–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ JS...");
                page.evaluate("document.querySelector(\"button:has-text('–í—ã—Å–ª–∞—Ç—å –∫–æ–¥')\")?.click()");
            }

            // --- –ñ–î–Å–ú –†–ï–®–ï–ù–ò–Ø –ö–ê–ü–ß–ò ---
            System.out.println("–¢–µ–ø–µ—Ä—å —Ä–µ—à–∞–π –∫–∞–ø—á—É –≤—Ä—É—á–Ω—É—é ‚Äî —è –∂–¥—É –ø–æ–ª–µ –¥–ª—è –∫–æ–¥–∞ (–¥–æ 10 –º–∏–Ω—É—Ç)...");
            try {
                page.waitForSelector("input.phone-sms-modal-code__input",
                        new Page.WaitForSelectorOptions()
                                .setTimeout(600_000)
                                .setState(WaitForSelectorState.VISIBLE)
                );
                System.out.println("–ü–æ–ª–µ –¥–ª—è –∫–æ–¥–∞ –ø–æ—è–≤–∏–ª–æ—Å—å! –î–æ—Å—Ç–∞—ë–º –∫–æ–¥ –∏–∑ Google Messages...");
            } catch (PlaywrightException e) {
                throw new RuntimeException("–ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–¥–∞ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å ‚Äî –∫–∞–ø—á–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞ –∏–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!");
            }

            // --- GOOGLE MESSAGES (—á–µ—Ä–µ–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é —Å–µ—Å—Å–∏—é) ---
            System.out.println("–û—Ç–∫—Ä—ã–≤–∞–µ–º Google Messages (persistent context)");
            BrowserContext messagesContext = playwright.chromium().launchPersistentContext(
                    Paths.get("messages-session.json"),
                    new BrowserType.LaunchPersistentContextOptions().setHeadless(false)
            );
            Page messagesPage = messagesContext.newPage();
            messagesPage.navigate("https://messages.google.com/web/conversations");

            System.out.println("–ó–∞–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ '–ù–µ—Ç, –Ω–µ –Ω—É–∂–Ω–æ' (–µ—Å–ª–∏ –µ—Å—Ç—å)...");
            if (messagesPage.locator("button:has-text('–ù–µ—Ç, –Ω–µ –Ω—É–∂–Ω–æ')").isVisible()) {
                messagesPage.waitForTimeout(1000);
                messagesPage.click("button:has-text('–ù–µ—Ç, –Ω–µ –Ω—É–∂–Ω–æ')");
            }

            System.out.println("–ñ–º—ë–º '–ü–æ–¥–∫–ª—é—á–∏—Ç—å, –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–≤ QR-–∫–æ–¥'...");
            messagesPage.waitForTimeout(1000);
            messagesPage.locator("span.qr-text:has-text('–ü–æ–¥–∫–ª—é—á–∏—Ç—å, –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–≤ QR-–∫–æ–¥')").click();

            System.out.println("–ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç 1xBet...");
            Locator lastMessage = messagesPage.locator("mws-conversation-list-item").first();
            lastMessage.waitFor();

            String smsText = lastMessage.innerText();
            System.out.println("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ SMS: " + smsText);

            Pattern pattern = Pattern.compile("\\b[a-zA-Z0-9]{6,8}\\b");
            Matcher matcher = pattern.matcher(smsText);
            String code = null;
            if (matcher.find()) {
                code = matcher.group();
            }

            if (code == null) {
                messagesPage.close();
                throw new RuntimeException("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑ SMS: " + smsText);
            }

            System.out.println("–ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–π –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: " + code);
            messagesPage.close();

            // --- –í–í–û–î–ò–ú –ö–û–î ---
            System.out.println("–í–≤–æ–¥–∏–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...");
            page.fill("input.phone-sms-modal-code__input", code);

            System.out.println("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∫–æ–¥ (–∂–º—ë–º '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')...");
            page.click("button.phone-sms-modal-content__send");
            page.waitForTimeout(2000);

            // --- –ü–µ—Ä–µ—Ö–æ–¥ –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç ---
            System.out.println("–ü–µ—Ä–µ—Ö–æ–¥ –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç...");
            page.waitForTimeout(1000);
            page.click("button.user-header__link.header__link.header__reg.header__reg_ico.ion-android-person.header__link--messages");

            System.out.println("–ö–ª–∏–∫–∞–µ–º '–í—ã—Ö–æ–¥'...");
            Locator logoutButton = page.locator("button.drop-menu-list__link_exit");
            logoutButton.waitFor(new Locator.WaitForOptions().setTimeout(3000).setState(WaitForSelectorState.VISIBLE));
            logoutButton.click();

            System.out.println("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –≤—ã—Ö–æ–¥...");
            Locator okButton = page.locator("button.swal2-confirm.swal2-styled");
            okButton.waitFor(new Locator.WaitForOptions().setTimeout(3000).setState(WaitForSelectorState.VISIBLE));
            okButton.click();

            long duration = (System.currentTimeMillis() - startTime) / 1000;
            tg.sendMessage("‚úÖ *v2_MOBI_social_authorization –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ*\n"
                    + "üïí –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: *" + duration + " —Å–µ–∫.*\n"
                    + "üì® –ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: `" + code + "`");

            System.out.println("–í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ ‚úÖ");
            page.waitForTimeout(5000);

        } catch (Exception e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
            screenshotPath = ScreenshotHelper.takeScreenshot(mobiContext.pages().get(0), "v2_MOBI_social_authorization_error");
            tg.sendMessage("üö® –û—à–∏–±–∫–∞ –≤ *v2_MOBI_social_authorization*:\n" + e.getMessage());
            if (screenshotPath != null) tg.sendPhoto(screenshotPath, "–°–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏");
        }
    }
}
